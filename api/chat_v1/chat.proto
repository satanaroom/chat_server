syntax = "proto3";

package chat_v1;

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/satanaroom/chat_server/pkg/chat_v1;chat_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat API"
    version: "1.0.0"
    contact: {
      name: "Yan Karpov"
      email: "ftragula@mail.ru"
    };
  };

  host: "localhost:8081"
  schemes: HTTP
  schemes: HTTPS
  consumes: "application/json"
};

service ChatV1 {
  rpc CreateChat(CreateChatRequest) returns (CreateChatResponse) {
    option (google.api.http) = {
      post: "/server/v1/create"
      body: "*"
    };
  };
  rpc ConnectChat(ConnectChatRequest) returns (stream ConnectChatResponse) {
    option (google.api.http) = {
      post: "/server/v1/connect"
      body: "*"
    };
  };
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/server/v1/send"
      body: "*"
    };
  }
}

message CreateChatRequest {
  repeated string usernames = 1 [(validate.rules).repeated.max_items = 10,
    (validate.rules).repeated.unique = true, (validate.rules).repeated.items.string.max_len = 50];
}

message CreateChatResponse {
  int64 chat_id = 1;
}

message ConnectChatRequest {
  int64 chat_id = 1;
}

message Message {
  string text = 1;
  string from = 2;
  string to = 3;
  google.protobuf.Timestamp sent_at = 4;
}

message ConnectChatResponse {
  Message message = 1;
}

message SendMessageRequest {
  Message message = 1;
}
